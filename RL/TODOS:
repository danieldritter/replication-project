1. Using the reward function, create labels for the value of each state (phase) in each game.
    a. Apply the reward function to all states in a game - DONE
    b. Run the discount function to get the values for each state (cumulative disc reward) - DONE
    c. Create new variable supply_centers_owners to hold the value at each state for each power. - DONE

2. Write the critic:
    a. Input: a state (e.g. one phase, 81 * 35 vector)
    b. Output: (7,) vector representing the value for each power.
    TENTATIVELY DONE

3. Pretrain the critic with each game; labels are the values computed in task 1.
    TENTATIVELY SORTA DONEISH
4. Write a loss function for the actor/encoder using 15-step return.

5. Write the while loop that interfaces with the engine,
    combines actor/critic loss, optimizes gradients etc. in 
    train a2c.py

6. Create mask

7. compute #support, #X-support, #Eff-X-support
#support = # of support orders given by a power in a game.
#X-support = # of support orders given by a power in a game that helps FOREIGN powers
#Eff-X-support = # of support orders given by a power in a game that helps FOREIGN powers CRITICALLY

Calculating support:
1. Look at orders

Calculating Eff-X-support:
1. Look at orders
2. combine() function